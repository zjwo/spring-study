<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--把创建对象的方式交给 spring 来管理 -->
    <!--spring 对bean的管理细节
        1. 创建 bean 的三种方式
        2. bean 对象的作用范围
        3. bean 对象的生命周期
    -->
    <!--创建 bean 的三种方式-->
    <!--第一种方式，使用默认构造函数创建，在 spring 的配置文件中使用 bean 标签
        配置 id 和 class 属性之后，且没有其他属性和标签时，采用的就是默认构造函数创建 bean 对象
        此时如果类中没有构造函数，则对象无法创建
    -->
    <!--<bean id="accountService" class="cn.imzjw.service.impl.AccountServiceImpl"/>-->

    <!-- 第二种方式: 使用普通工厂中的方法创建对象 (使用某个类中的方法来创建对象，并存入 spring 容器) -->
    <!--<bean id="instanceFactory" class="cn.imzjw.factory.InstanceFactory"/>-->
    <!-- accountService 是由 factory-bean 所指向工厂中的 factory-method 的方法来获取的 -->
    <!--<bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"/>-->

    <!--第三种方式：使用工厂中的静态方法创建对象（使用某个类中的静态方法创建对象，并存入 spring 容器）-->
    <!--<bean id="accountService" class="cn.imzjw.factory.StaticFactory" factory-method="getAccountService"/>-->

    <!-- ==================== bean 的作用范围========================= -->
    <!-- bean 标签的 scope 属性
        作用：用于指定 bean 的作用范围
        取值：常用的就是 单例 和 多例
            singleton: 单例的（默认值）
            prototype: 多例的
            request: 作用于 web 应用的请求范围
            session: 作用于 web 应用的会话范围
            global-session: 作用于集群环境的会话范围 (全局会话范围)，当不是集群坏境时，它就是 session
    -->
    <bean id="accountService" class="cn.imzjw.service.impl.AccountServiceImpl" scope="prototype"/>


</beans>